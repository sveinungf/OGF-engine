CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(OGF_NAME OGF_Engine)
PROJECT(${OGF_NAME})

SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/bin")
SET(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/lib")
SET(OGF_RESOURCE_DIR "\"${CMAKE_SOURCE_DIR}/resources\"")

CONFIGURE_FILE(
	"${CMAKE_SOURCE_DIR}/OGFConfig.h.in"
	"${PROJECT_BINARY_DIR}/include/OGFConfig.h"
)

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/depends/glew-1.10.0/include
	${CMAKE_SOURCE_DIR}/depends/glfw-3.0.3/include
	${CMAKE_SOURCE_DIR}/depends/glm-0.9.4.6/include
	${CMAKE_SOURCE_DIR}/depends/soil-20080707/include
	${CMAKE_SOURCE_DIR}/depends/assimp--3.0.1270-sdk/include
	${CMAKE_SOURCE_DIR}/include
	${PROJECT_BINARY_DIR}/include	#Configure files generated by CMake
)

SET(GLEW_NAME glew)
SET(SOIL_NAME soil)

ADD_SUBDIRECTORY(depends/glew-1.10.0)

#GLFW
SET(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "Build the GLFW example programs")
SET(GLFW_BUILD_TESTS OFF CACHE BOOL "Build the GLFW test programs")
SET(GLFW_INSTALL OFF CACHE BOOL "Generate installation target")
ADD_SUBDIRECTORY(depends/glfw-3.0.3)

#AssImp
SET(BUILD_STATIC_LIB ON CACHE BOOL "Build a static (.a) version of the library")
SET(ENABLE_BOOST_WORKAROUND ON CACHE BOOL "If a simple implementation of the used Boost functions is used. Slightly reduces functionality, but enables builds without Boost available.")
SET(BUILD_ASSIMP_TOOLS OFF CACHE BOOL "If the supplementary tools for Assimp are built in addition to the library.")
ADD_SUBDIRECTORY(depends/assimp--3.0.1270-sdk)

ADD_SUBDIRECTORY(depends/soil-20080707)
ADD_SUBDIRECTORY(src)

#Build a static library of GLEW
SET_PROPERTY(TARGET
	${GLEW_NAME}
	${OGF_NAME}
	APPEND PROPERTY COMPILE_DEFINITIONS GLEW_STATIC
)

#Suppress warnings in third party libraries
IF(MSVC)
	SET_PROPERTY(TARGET
		assimp
		APPEND PROPERTY COMPILE_DEFINITIONS _CRT_SECURE_NO_WARNINGS _SCL_SECURE_NO_WARNINGS
	)
	
	SET_PROPERTY(TARGET
		${SOIL_NAME}
		APPEND_STRING PROPERTY COMPILE_FLAGS " /W1"
	)
ELSEIF(CMAKE_COMPILER_IS_GNUCXX)
	SET_PROPERTY(TARGET
		zlib
		APPEND_STRING PROPERTY COMPILE_FLAGS " -Wno-attributes"
	)
ENDIF()

IF(MSVC)
	#Set warning level 4 for OGF source code
	SET_PROPERTY(TARGET
		${OGF_NAME}
		APPEND_STRING PROPERTY COMPILE_FLAGS " /W4"
	)
ELSEIF(CMAKE_COMPILER_IS_GNUCXX)
	#Use C++11 and enable all warnings for OGF source code
	SET_PROPERTY(TARGET
		${OGF_NAME}
		APPEND_STRING PROPERTY COMPILE_FLAGS " -std=c++11 -Wall -Wextra -pedantic"
	)
ENDIF()

#Project folder structure in Visual Studio
IF(MSVC)
	SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
	
	SET(DEPENDENCIES Dependencies)
	SET_TARGET_PROPERTIES(${GLEW_NAME} PROPERTIES FOLDER ${DEPENDENCIES})
	SET_TARGET_PROPERTIES(glfw PROPERTIES FOLDER ${DEPENDENCIES})
	SET_TARGET_PROPERTIES(${SOIL_NAME} PROPERTIES FOLDER ${DEPENDENCIES})
	SET_TARGET_PROPERTIES(assimp PROPERTIES FOLDER ${DEPENDENCIES}/AssImp)
	SET_TARGET_PROPERTIES(uninstall PROPERTIES FOLDER ${DEPENDENCIES}/AssImp)
	SET_TARGET_PROPERTIES(zlib PROPERTIES FOLDER ${DEPENDENCIES}/AssImp)
ENDIF()
